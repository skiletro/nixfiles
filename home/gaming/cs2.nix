{
  lib,
  osConfig,
  ...
}: {
  config = let
    refreshRate = 165;

    launchOptions = [
      "LD_PRELOAD=''" # Fixes https://github.com/ValveSoftware/steam-for-linux/issues/11446
      "SDL_VIDEODRIVER=wayland" # Forces the game to run with Wayland
      "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR=0" # Remove client side decorations
      "MANGOHUD_CONFIG='fps_limit=${toString (refreshRate - 2)},vsync=2,no_display' mangohud" # Cap FPS, this is recommended by Valve
      "gamemoderun" # Enable system optimisations while game is open
      "%command%"
      "-nojoy" # Disable controller support
      "-high" # High priority
      "-console" # Open console on launch
      "-softparticlesdefaultoff" # Turn off fancy particle effects
      "-forcenovsync" # Turn off vsync in game, as we are using the mangohud solution instead
      "-refresh ${toString refreshRate}"
      "-freq ${toString refreshRate}"
      "-sdlaudiodriver pulse"
      "-maxMem=7000K" # Depends on how much VRAM you have
    ];
    # https://steamcommunity.com/app/730/discussions/0/594020536868179202/

    settings = {
      sensitivity = 2.055;

      # HUD
      safezonex = 0.7;
      safezoney = 1;
      cl_hud_color = 1;
      cl_hud_radar_scale = 1.3;
      hud_scaling = 0.9;
      hud_showtargetid = 1;
      cl_radar_always_centered = 0;
      cl_radar_icon_scale_min = 0.5;
      cl_radar_rotate = 1;
      cl_radar_square_with_scoreboard = 1;

      # Crosshair
      crosshair = 1;
      cl_crosshair_recoil = false;
      cl_crosshair_drawoutline = 1;
      cl_crosshair_dynamic_maxdist_splitratio = 0.35;
      cl_crosshair_dynamic_splitalpha_innermod = 1;
      cl_crosshair_dynamic_splitalpha_outermod = 0.5;
      cl_crosshair_dynamic_splitdist = 7;
      cl_crosshair_friendly_warning = 0;
      cl_crosshair_outlinethickness = 1;
      cl_crosshair_sniper_show_normal_inaccuracy = 0;
      cl_crosshair_sniper_width = 0.01;
      cl_crosshair_t = 0;
      cl_crosshairalpha = 255;
      cl_crosshaircolor = 5;
      cl_crosshaircolor_b = 255;
      cl_crosshaircolor_g = 255;
      cl_crosshaircolor_r = 255;
      cl_crosshairdot = 0;
      cl_crosshairgap = -2;
      cl_crosshairgap_useweaponvalue = 0;
      cl_crosshairsize = 1.5;
      cl_crosshairstyle = 4;
      cl_crosshairthickness = 0;
      cl_crosshairusealpha = 1;
      cl_fixedcrosshairgap = -4.5;

      # Viewmodel
      viewmodel_presetpos = 0;
      viewmodel_fov = 68;
      viewmodel_offset_x = 2;
      viewmodel_offset_y = 2.0;
      viewmodel_offset_z = -2.0;

      # Misc
      cl_righthand = 0;
      fps_max = refreshRate;
      r_dynamic = 0;
      mat_queue_mode = 2;
      cl_forcepreload = 1;
    };

    binds = {
      "`" = "toggleconsole";
      MOUSE_X = "yaw";
      MOUSE_Y = "pitch";
      ESCAPE = "cancelselect";
      TAB = "+showscores";

      "1" = "slot1";
      "2" = "slot2";
      "3" = "slot3";
      "4" = "slot4";
      "5" = "slot5";
      "6" = "slot6";
      "7" = "slot7";
      "8" = "slot8";
      "9" = "slot9";

      w = "+forward";
      a = "+left";
      s = "+back";
      d = "+right";
      SPACE = "+jump";
      SHIFT = "+sprint";
      MOUSE1 = "+attack";
      MOUSE2 = "+attack2";
      MOUSE3 = "player_ping";
      MOUSE4 = "+voicerecord";
      MOUSE5 = "toggle_recoil"; #alias
      c = "+duck";
      r = "+reload";
      e = "+use";
      f = "+lookatweapon";
      b = "buymenu";
      g = "drop";
      q = "lastinv";
      t = "messagemode";
      u = "messagemode2";
      z = "noclip";
      x = "switchhands";
      v = "+spray_menu";
      ALT = "+nadebind"; #alias
      CTRL = "+nadebind";
    };

    aliases = {
      bhop = "sv_cheats 1;sv_enablebunnyhopping 1;sv_autobunnyhopping 1";
      dc = "disconnect";

      toggle_recoil = "toggle cl_crosshair_recoil 1 0;toggle cl_crosshaircolor_g 0 255;toggle cl_crosshaircolor_b 0 255";
      "-nadebind" = "bind 1 slot1;bind 2 slot2;bind 3 slot3;bind 4 slot4;bind 5 slot5;bind q lastinv; cl_crosshair_t 0";
      "+nadebind" = "bind 1 slot6;bind 2 slot7;bind 3 slot8;bind 4 slot10;bind 5 slot9;bind q slot12; cl_crosshair_t 1";
    };

    mkSettings = attrs: lib.mapAttrsToList (name: value: "${name} ${toString value}") attrs;
    mkBinds = attrs: lib.mapAttrsToList (name: cmd: ''bind "${name}" "${cmd}"'') attrs;
    mkAliases = attrs: lib.mapAttrsToList (name: cmd: ''alias "${name}" "${cmd}"'') attrs;

    mkCfgFile = lib.concatStringsSep "\n" (
      ["// This configuration was generated by Nix." "unbindall"] ++ mkSettings settings ++ mkBinds binds ++ mkAliases aliases ++ ["host_writeconfig" "echoln Nix configuration loaded."]
    );
  in
    lib.mkIf osConfig.eos.programs.gaming.enable {
      xdg.dataFile."Steam/steamapps/common/Counter-Strike Global Offensive/game/csgo/cfg/autoexec_nix.cfg".text = mkCfgFile;

      programs.steam.config.apps."730".launchOptions = "${lib.concatStringsSep " " launchOptions} +exec autoexec_nix";
    };
}
