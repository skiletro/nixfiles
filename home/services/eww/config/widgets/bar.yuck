(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "100%"
                      :y "0px"
                      :width "100%"
                      :anchor "top center")

  (bar))

(defwidget bar []
  (centerbox :class "widget_bar"
    (box :space-evenly false :halign "start" :class "left"
      (workspaces)
      (window_title))
    (box :space-evenly false :halign "center" :class "center")
    (box :space-evenly false :halign "end" :class "right"
      (music)
      (tray)
      (io)
      (time)
      (notification_count))))

;
; LEFT SIDE
;
(defvar workspaces '[1,2,3,4,5,6]')
(deflisten current_workspace :initial "1" "./scripts/get-active-workspace")
(defwidget workspaces []
  (box :space-evenly false :class "workspaces"
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for index in workspaces
      (button :onclick "hyprctl dispatch workspace ${index}"
              :class "workspace ${current_workspace == index ? "active": ""}"))))

(deflisten window_title :initial "..." "./scripts/get-window-title")
(defwidget window_title []
  (box :class "window_title"
       :visible "${window_title != "" ? "true" : "false"}" ;hides if there is no title
    (label :text "${window_title}")))

;
; RIGHT SIDE
;
(deflisten song_status :initial "" "./scripts/get-song-status")
(defwidget music []
  (button :class "music"
          :visible "${song_status != "" ? "true" : "false"}"
          :onclick "playerctl --player spotify play-pause"
    (label :text "${song_status}")))

(defwidget tray []
  (systray :class "tray"))

(defpoll battery :interval "30s" "./scripts/get-battery-status")
(defpoll volume :interval "5s" "./scripts/get-volume-status")
(defpoll network :interval "1m" "./scripts/get-network-status")
(defwidget io []
  (button :class "io" :onclick "sleep 0.1;${EWW_CMD} close cal;swaync-client -cp;${EWW_CMD} open cc --toggle"
    (box
      (eventbox :width 24 :class "volume" :onscroll "${EWW_CONFIG_DIR}/scripts/change-volume {}"
        (label :text "${volume.icon}" :tooltip "${volume.value}% Volume"))
      (eventbox :width 24 :class "battery"
        (label :text "${battery.icon}" :tooltip "${battery.value}% - ${battery.eta}"))
      (eventbox :width 24 :class "network"
        (label :text "${network.icon}")))))

(defpoll time :interval "10s" "date '+%I:%M%p - %b %d, %Y'")
(defwidget time []
    (button :class "time" :onclick "sleep 0.1;${EWW_CMD} close cc;swaync-client -cp;${EWW_CMD} open cal --toggle"
      (label :text "${time}")))

(deflisten notification_count "./scripts/get-notification-amount")
(defwidget notification_count []
  (button :class "notifcount" :onclick "sleep 0.1;${EWW_CMD} close cc;${EWW_CMD} close cal;swaync-client -t -sw"
    (label :text "${notification_count}")))
